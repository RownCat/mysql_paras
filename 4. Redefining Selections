DISTINCT:  used in conjuction with select:   To get distinct type  i.e non duplicates:
        NOTE: it comes right after the SELECT
        SELECT DISTINCT author_lname from books;
        gives the distinct author_lname only;
        SELECT DISTINCT author_lname,author_fname from books;
+----------------+--------------+
| author_lname   | author_fname |
+----------------+--------------+
| Lahiri         | Jhumpa       |
| Gaiman         | Neil         |
| Eggers         | Dave         |
| Chabon         | Michael      |
| Smith          | Patti        |
| Carver         | Raymond      |
| DeLillo        | Don          |
| Steinbeck      | John         |
| Foster Wallace | David        |
| Harris         | Dan          |
| Harris         | Freida       |
| Saunders       | George       |
+----------------+--------------+


ORDER BY: SELECT title from books order by title;
          SELECT author_lname from books ORDER BY author_lname;
          
          to have descending name:
          SELECT title from books order by title DESC;
          
          
          SELECT title, released_year, pages from books order by released_year;
+-----------------------------------------------------+---------------+-------+
| title                                               | released_year | pages |
+-----------------------------------------------------+---------------+-------+
| Cannery Row                                         |          1945 |   181 |
| What We Talk About When We Talk About Love: Stories |          1981 |   176 |
| White Noise                                         |          1985 |   320 |
| Where I'm Calling From: Selected Stories            |          1989 |   526 |
| Interpreter of Maladies                             |          1996 |   198 |
| The Amazing Adventures of Kavalier & Clay           |          2000 |   634 |
| American Gods                                       |          2001 |   465 |
| fake_book                                           |          2001 |   428 |
| A Heartbreaking Work of Staggering Genius           |          2001 |   437 |
| The Namesake                                        |          2003 |   291 |
| Coraline                                            |          2003 |   208 |
| Oblivion: Stories                                   |          2004 |   329 |
| Consider the Lobster                                |          2005 |   343 |
| Just Kids                                           |          2010 |   304 |
| A Hologram for the King: A Novel                    |          2012 |   352 |
| The Circle                                          |          2013 |   504 |
| 10% Happier                                         |          2014 |   256 |
| Norse Mythology                                     |          2016 |   304 |
| Lincoln In The Bardo                                |          2017 |   367 |
+-----------------------------------------------------+---------------+-------+


we are ordering by released year although it is no being printed. it is allowd;
    SELECT title, pages from books order by released_year;
+-----------------------------------------------------+-------+
| title                                               | pages |
+-----------------------------------------------------+-------+
| Cannery Row                                         |   181 |
| What We Talk About When We Talk About Love: Stories |   176 |
| White Noise                                         |   320 |
| Where I'm Calling From: Selected Stories            |   526 |
| Interpreter of Maladies                             |   198 |
| The Amazing Adventures of Kavalier & Clay           |   634 |
| American Gods                                       |   465 |
| fake_book                                           |   428 |
| A Heartbreaking Work of Staggering Genius           |   437 |
| The Namesake                                        |   291 |
| Coraline                                            |   208 |
| Oblivion: Stories                                   |   329 |
| Consider the Lobster                                |   343 |
| Just Kids                                           |   304 |
| A Hologram for the King: A Novel                    |   352 |
| The Circle                                          |   504 |
| 10% Happier                                         |   256 |
| Norse Mythology                                     |   304 |
| Lincoln In The Bardo                                |   367 |
+-----------------------------------------------------+-------+


****************  SELECT title, pages from books order by 2;      2 means pages it is a shortcut;


ORDERING BY TWO SEPRATE COLUMNS:
Select author_lname, author_fname from books ORDER BY author_lname, author_fname;
+----------------+--------------+
| author_lname   | author_fname |
+----------------+--------------+
| Carver         | Raymond      |
| Carver         | Raymond      |
| Chabon         | Michael      |
| DeLillo        | Don          |
| Eggers         | Dave         |
| Eggers         | Dave         |
| Eggers         | Dave         |
| Foster Wallace | David        |
| Foster Wallace | David        |
| Gaiman         | Neil         |
| Gaiman         | Neil         |
| Gaiman         | Neil         |
| Harris         | Dan          |
| Harris         | Freida       |
| Lahiri         | Jhumpa       |
| Lahiri         | Jhumpa       |
| Saunders       | George       |
| Smith          | Patti        |
| Steinbeck      | John         |
+----------------+--------------+

what it does is after sorting by lname , then it sorts by first name like harris dan comes first here before harris freida  because after 
sorting last name we sort the fisrt name.


LIMIT: SELECT title from books LIMIT 2:
+-----------------+
| title           |
+-----------------+
| The Namesake    |
| Norse Mythology |
+-----------------+

        Generally , we use it with ORDER BY;
SELECT title , released_year from books ORDER BY 2 LIMIT 5;
+-----------------------------------------------------+---------------+
| title                                               | released_year |
+-----------------------------------------------------+---------------+
| Cannery Row                                         |          1945 |
| What We Talk About When We Talk About Love: Stories |          1981 |
| White Noise                                         |          1985 |
| Where I'm Calling From: Selected Stories            |          1989 |
| Interpreter of Maladies                             |          1996 |
+-----------------------------------------------------+---------------+

We can also specify the starting and how many from there ( using 0 indexing):

SELECT title , released_year from books ORDER BY 2 LIMIT 2,5;
+-------------------------------------------+---------------+
| title                                     | released_year |
+-------------------------------------------+---------------+
| White Noise                               |          1985 |
| Where I'm Calling From: Selected Stories  |          1989 |
| Interpreter of Maladies                   |          1996 |
| The Amazing Adventures of Kavalier & Clay |          2000 |
| American Gods                             |          2001 |
+-------------------------------------------+---------------+

To go Until the end we can use a large number as second parameter.
SELECT title , released_year from books ORDER BY 2 LIMIT 12,555;
+----------------------------------+---------------+
| title                            | released_year |
+----------------------------------+---------------+
| Consider the Lobster             |          2005 |
| Just Kids                        |          2010 |
| A Hologram for the King: A Novel |          2012 |
| The Circle                       |          2013 |
| 10% Happier                      |          2014 |
| Norse Mythology                  |          2016 |
| Lincoln In The Bardo             |          2017 |
+----------------------------------+---------------+


LIKE:  WHERE IS USED TO SELECT EXACT MATCHES:
       eg: if we want a book with Harry Potter in title then we can use WHERE in conjunction with LIKE.
       
       % is a wildcard. 
       SELECT title, author_fname from books where author_fname LIKE "%da%"; not case specific
       anything - da - anything 
+-------------------------------------------+--------------+
| title                                     | author_fname |
+-------------------------------------------+--------------+
| A Hologram for the King: A Novel          | Dave         |
| The Circle                                | Dave         |
| A Heartbreaking Work of Staggering Genius | Dave         |
| Oblivion: Stories                         | David        |
| Consider the Lobster                      | David        |
| 10% Happier                               | Dan          |
| fake_book                                 | Freida       |
+-------------------------------------------+--------------+

SELECT title, author_fname from books where author_fname LIKE "%da";
+-----------+--------------+
| title     | author_fname |
+-----------+--------------+
| fake_book | Freida       |
+-----------+--------------+

SELECT title, author_fname from books where author_fname LIKE "%";  will show entire list.
        _ is another wildcard. represents exactly 1 character.
        
Select title, stock_quantity from books where stock_quantity like "___";  triple _ means show with 3 characters only.
+-------------------------------------------+----------------+
| title                                     | stock_quantity |
+-------------------------------------------+----------------+
| A Hologram for the King: A Novel          |            154 |
| A Heartbreaking Work of Staggering Genius |            104 |
| Coraline                                  |            100 |
| Oblivion: Stories                         |            172 |
| fake_book                                 |            287 |
+-------------------------------------------+----------------+


Select title, stock_quantity from books where stock_quantity like "_";   because no stock is available with 1 character length stock quantity.
Empty set.

if we have % in the name then we use \ to escape

SELECT title FROM books WHERE title LIKE "%\%%";
anthing- %- anything.
+-------------+
| title       |
+-------------+
| 10% Happier |
+-------------+
       
       
EXERCISE: 
SELECT CONCAT("MY FAVORITE AUTHOR IS ", UPPER(CONCAT(author_fname," ",author_lname,"!"))) as "yell"  from books ORDER BY author_lname ;
+---------------------------------------------+
| yell                                        |
+---------------------------------------------+
| MY FAVORITE AUTHOR IS RAYMOND CARVER!       |
| MY FAVORITE AUTHOR IS RAYMOND CARVER!       |
| MY FAVORITE AUTHOR IS MICHAEL CHABON!       |
| MY FAVORITE AUTHOR IS DON DELILLO!          |
| MY FAVORITE AUTHOR IS DAVE EGGERS!          |
| MY FAVORITE AUTHOR IS DAVE EGGERS!          |
| MY FAVORITE AUTHOR IS DAVE EGGERS!          |
| MY FAVORITE AUTHOR IS DAVID FOSTER WALLACE! |
| MY FAVORITE AUTHOR IS DAVID FOSTER WALLACE! |
| MY FAVORITE AUTHOR IS NEIL GAIMAN!          |
| MY FAVORITE AUTHOR IS NEIL GAIMAN!          |
| MY FAVORITE AUTHOR IS NEIL GAIMAN!          |
| MY FAVORITE AUTHOR IS FREIDA HARRIS!        |
| MY FAVORITE AUTHOR IS DAN HARRIS!           |
| MY FAVORITE AUTHOR IS JHUMPA LAHIRI!        |
| MY FAVORITE AUTHOR IS JHUMPA LAHIRI!        |
| MY FAVORITE AUTHOR IS GEORGE SAUNDERS!      |
| MY FAVORITE AUTHOR IS PATTI SMITH!          |
| MY FAVORITE AUTHOR IS JOHN STEINBECK!       |
+---------------------------------------------+

